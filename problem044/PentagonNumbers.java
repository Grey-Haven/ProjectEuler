package problem044;

import java.util.ArrayList;

/**
 * Pentagonal numbers are generated by the formula, P[n]=n(3n-1)/2. The first ten pentagonal numbers are:
 * <br>
 * 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
 * <br>
 * It can be seen that P[4] + P[7] = 22 + 70 = 92 = P[8]. However, their difference, 70 - 22 = 48, is not pentagonal.
 * <br>
 * Find the pair of pentagonal numbers, P[j] and P[k], for which their sum and difference are pentagonal and |D = P[k] - P[j]| is minimised; what is the value of D?
 * <br>
 * Answer: 5482660
 *
 * @since Aug 15, 2013 2:07:07 PM
 * @author Stephen White
 *
 */
public class PentagonNumbers {
	
	int maxNum;
	
	public PentagonNumbers(){
		this(0);
	}
	
	public PentagonNumbers(int maxNum){
		this.maxNum = maxNum;
	}
	
	public static void main(String [] args){
		PentagonNumbers pn = new PentagonNumbers(3000);
		pn.run();
	}
	
	public void run(){
		
		ArrayList<Integer>pentagonList = new ArrayList<Integer>();
		ArrayList<Integer[]> pairList = new ArrayList<Integer[]>();
		
		for(int i = 0; i <= maxNum; i++){
	//		System.out.println(pentagon(i));
			pentagonList.add(new Integer(pentagon(i)));
		}
		
		int pentAdd;
		int pentSub;
		for(int i = 1; i < pentagonList.size(); i++){
			for(int j = pentagonList.size()-1; j > i; j--){
				pentAdd = pentagonList.get(i) + pentagonList.get(j);
				pentSub = pentagonList.get(j) - pentagonList.get(i);
				if(isPentagonal(pentAdd) && isPentagonal(pentSub)){
					Integer [] pair = {pentagonList.get(i), pentagonList.get(j)};
					pairList.add(pair);
					System.out.println(pair[0] + " " + pair[1]);
				}
			}
		}
		System.out.println();
		System.out.println("--------");
		for(Integer[] pair : pairList){
			System.out.println(pair[0] + " " + pair[1]);
			System.out.println(Math.abs(pair[0] + pair[1]));
		}
		
	}
	
	private int pentagon(int n){
		return (n * ((3*n)-1))/ 2;
	}
	
	private boolean isPentagonal(int n){
		for(int i = 1; pentagon(i) <= n; i++){
			if(pentagon(i) == n){
				return true;
			}
		}
		return false;
	}

}
